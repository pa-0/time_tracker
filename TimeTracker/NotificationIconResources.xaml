<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:tb="http://www.hardcodet.net/taskbar"
                    xmlns:local="clr-namespace:Ficksworkshop.TimeTracker">
    <ContextMenu x:Shared="false" x:Key="SysTrayMenu">
        <MenuItem Header="Projects" ItemsSource="{Binding ActiveProjects}">
            <MenuItem.ItemContainerStyle>
                <Style>
                    <Setter Property="MenuItem.Header" Value="{Binding Description}"/>
                    <Setter Property="MenuItem.Command" Value="{Binding ActivateProjectCommand}"/>
                </Style>
            </MenuItem.ItemContainerStyle>
        </MenuItem>
        <MenuItem Header="Open Window" Command="{x:Static local:Commands.ShowWindowCommand}"/>
        <MenuItem Command="{Binding TogglePunchStateCommand}">
               <MenuItem.Style>
                   <Style TargetType="MenuItem">
                       <Style.Triggers>
                           <DataTrigger Binding="{Binding IsPunchedIn}" Value="false">
                               <Setter Property="Header" Value="Punch in"/>
                           </DataTrigger>
                           <DataTrigger Binding="{Binding IsPunchedIn}" Value="true">
                               <Setter Property="Header" Value="Punch out"/>
                           </DataTrigger>
                       </Style.Triggers>
                   </Style>
               </MenuItem.Style>
        </MenuItem>
        <Separator/>
        <MenuItem Header="Exit" Command="{x:Static local:Commands.ExitApplicationCommand}" />
    </ContextMenu>
    
    <tb:TaskbarIcon x:Key="NotificationIcon"
                    IconSource="/Red.ico"
                    ToolTipText="Double-click to punch-in/punch-out"
                    DoubleClickCommand="{Binding TogglePunchStateCommand}"
                    ContextMenu="{StaticResource SysTrayMenu}">
        
        <tb:TaskbarIcon.DataContext>
            <local:NotificationIconViewModel/>
        </tb:TaskbarIcon.DataContext>
    </tb:TaskbarIcon>
</ResourceDictionary>